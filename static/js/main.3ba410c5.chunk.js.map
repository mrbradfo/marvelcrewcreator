{"version":3,"sources":["components/Tile.js","components/ResultsList.js","components/SearchBar.js","components/Loading.js","components/LoadMore.js","services/MarvelAPI.js","components/Error.js","components/CreateTeamModal.js","components/TeamAccordion.js","App.js","index.js","imgs/marvel_loader.gif"],"names":["Tile","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","detailModalOpen","addCharacterModalOpen","teamName","teamSelection","React","createRef","inherits","createClass","key","value","_this2","header","react_default","a","createElement","Card","shadow","p","radius","withBorder","Section","Image","src","data","thumbnail","path","extension","height","alt","Center","Text","className","title","description","comics","Accordion","Item","Control","available","items","map","item","index","Panel","name","series","stories","events","characterDetailsAccordion","Fragment","chevronPosition","sx","maxWidth","mx","characterDetailsModal","Modal","opened","onClose","setState","toUpperCase","withCloseButton","overlayBlur","addToTeamModal","NativeSelect","teams","ref","label","Button","onClick","addCharacterToTeam","current","Menu","width","position","withArrow","closeDelay","closeOnItemClick","Target","image","Dropdown","Label","icon","index_esm","size","showAddToTeamModal","showDetailsModal","length","alert","characterData","Component","ResultsList","apply","arguments","resultCardElement","results","searchWord","result","Tile_Tile","id","onResultClick","SearchBar","handleSubmit","bind","assertThisInitialized","handleChange","onSubmit","type","placeholder","onChange","autoFocus","event","preventDefault","target","Loading","loading","LoadMore","MarvelAPI","md5","require","privateKey","process","publicKey","ts","Date","getTime","hash","apikey","param","undefined","params","objectSpread","getAuthInfo","axios","get","then","response","config","endpoint","Error","CreateTeamModal","modalOpen","newTeamName","closeOnClickOutside","TextInput","mt","currentTarget","data-autofocus","createTeam","Tooltip","_this3","currentTeams","findIndex","team","onCreateClick","TeamAccordion","teamsAccordion","toString","Box","display","alignItems","ActionIcon","onDeleteTeamClicked","characters","characterIndex","Avatar","onDeleteCharacterClicked","role","aria-label","teamIndex","characterId","getTeams","saved","localStorage","getItem","JSON","parse","App","debouncedSearch","_","debounce","getCharacters","marvelService","nameStartsWith","canLoadMore","total","offset","count","isLoading","catch","err","console","error","hasError","getCharacter","selectedResult","getMoreCharacters","concat","toConsumableArray","addNewTeam","removeTeam","removeCharacterFromTeam","searchResults","Error_Error","Loading_Loading","ResultsList_ResultsList","loadMoreBtn","LoadMore_LoadMore","TeamAccordion_TeamAccordion","SearchBar_SearchBar","CreateTeamModal_CreateTeamModal","prevProps","prevState","snapshot","prevSearchWord","log","newTeam","setItem","stringify","clonedTeams","splice","char","newCharacterName","updatedTeams","push","container","document","getElementById","createRoot","render","src_App_0","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.3ba410c5.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Accordion, Button, Card, Center, Image, Menu, Modal, NativeSelect, Text} from \"@mantine/core\";\nimport {IconInfoSquare, IconPlus} from \"@tabler/icons\";\n\nexport class Tile extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            detailModalOpen: false,\n            addCharacterModalOpen: false,\n            teamName: ''\n        };\n\n        this.teamSelection = React.createRef();\n\n    }\n\n\n    render() {\n\n        const header = <Card shadow=\"sm\" p=\"lg\" radius=\"md\" withBorder>\n            <Card.Section>\n                <Image\n                    src={this.props.data.thumbnail.path + '.' + this.props.data.thumbnail.extension}\n                    height={160}\n                    alt=\"Norway\"\n                />\n                <Center p=\"sm\">\n                    <Text>\n                        <dt className=\"title\">{this.props.title}</dt>\n                        <p>{this.props.data.description}</p>\n                    </Text>\n                </Center>\n            </Card.Section>\n        </Card>;\n\n        const comics = <Accordion.Item\n            className=\"accordion\" key={\"Comics\"} value={\"Comics\"}>\n            <Accordion.Control>{\"Comics \" + this.props.data.comics.available}</Accordion.Control>\n            {\n                this.props.data.comics.items.map((item, index) => (\n                        <Accordion.Panel key={index}>{<li>{item.name}</li>}</Accordion.Panel>\n                    )\n                )\n            }\n        </Accordion.Item>;\n\n        const series = <Accordion.Item\n            className=\"accordion\" key={\"Series\"} value={\"Series\"}>\n            <Accordion.Control>{\"Series \" + this.props.data.series.available}</Accordion.Control>\n            {\n                this.props.data.series.items.map((item, index) => (\n                        <Accordion.Panel key={index}>{<li>{item.name}</li>}</Accordion.Panel>\n                    )\n                )\n            }\n        </Accordion.Item>;\n\n        const stories = <Accordion.Item\n            className=\"accordion\" key={\"Stories\"} value={\"Stories\"}>\n            <Accordion.Control>{\"Stories \" + this.props.data.stories.available}</Accordion.Control>\n            {\n                this.props.data.stories.items.map((item, index) => (\n                        <Accordion.Panel key={index}>{<li>{item.name}</li>}</Accordion.Panel>\n                    )\n                )\n            }\n        </Accordion.Item>;\n\n        const events = <Accordion.Item\n            className=\"accordion\" key={\"Events\"} value={\"Events\"}>\n            <Accordion.Control>{\"Events \" + this.props.data.events.available}</Accordion.Control>\n            {\n                this.props.data.events.items.map((item, index) => (\n                        <Accordion.Panel key={index}>{<li>{item.name}</li>}</Accordion.Panel>\n                    )\n                )\n            }\n        </Accordion.Item>;\n\n        const characterDetailsAccordion = this.props.data ?\n            <>\n                {header}\n                <Accordion chevronPosition=\"left\" sx={{maxWidth: 400}} mx=\"auto\">\n                    {comics}\n                    {series}\n                    {stories}\n                    {events}\n                </Accordion>\n            </>\n            :\n            <p>No character data found!</p>;\n\n\n        const characterDetailsModal = <Modal\n            opened={this.state.detailModalOpen}\n            onClose={() => this.setState({detailModalOpen: false})}\n            title={this.props.title.toUpperCase()}\n            withCloseButton={true}\n            overlayBlur={4}\n        >\n            <div className=\"character-details-modal\">\n                {characterDetailsAccordion}\n            </div>\n        </Modal>;\n\n        const addToTeamModal = <Modal\n            opened={this.state.addCharacterModalOpen}\n            onClose={() => this.setState({addCharacterModalOpen: false})}\n            title={this.props.title.toUpperCase()}\n            withCloseButton={true}\n            overlayBlur={4}>\n            <div className=\"character-details-modal\">\n                {\n                    <>\n                        <div className=\"add-selection\">\n                            <NativeSelect\n                                data={this.props.teams.map(a => a.teamName)}\n                                ref={this.teamSelection}\n                                label=\"Add\"\n                                description=\"Add to a team\"\n                            />\n\n                            <Button\n                                className=\"create-team-btn\"\n                                onClick={() => {\n                                    this.addCharacterToTeam(this.props.data, this.teamSelection.current.value);\n                                }}\n                            >Add</Button>\n                        </div>\n                    </>\n                }\n            </div>\n        </Modal>;\n\n\n        return (\n            <>\n                <Menu shadow=\"md\" width={250} position={\"right\"} withArrow={true} closeDelay={200}\n                      closeOnItemClick={false}>\n                    <Menu.Target>\n                        <button className=\"tile\">\n                            <div className=\"tile-img\">\n                                <img src={this.props.image} alt={this.props.title}/>\n                            </div>\n                            <h2>{this.props.title}</h2>\n                        </button>\n                    </Menu.Target>\n\n                    <Menu.Dropdown>\n                        <Menu.Label>{this.props.title}</Menu.Label>\n                        <Menu.Item\n                            className=\"title-menu\"\n                            icon={<IconPlus size={25}/>}\n                            onClick={() => {\n                                this.showAddToTeamModal();\n                            }}\n                        >\n                            ADD TO TEAM\n                        </Menu.Item>\n                        <Menu.Item\n                            onClick={() => {\n                                this.showDetailsModal();\n                            }}\n                            className=\"title-menu\" icon={<IconInfoSquare size={14}/>}>SHOW DETAILS</Menu.Item>\n\n                    </Menu.Dropdown>\n                </Menu>\n                {addToTeamModal}\n                {characterDetailsModal}\n            </>\n        );\n    }\n\n    showDetailsModal() {\n        this.setState({detailModalOpen: true});\n    }\n\n    showAddToTeamModal() {\n        this.props.teams.length>0\n            ?\n            this.setState({addCharacterModalOpen: true})\n            :\n            alert(\"First create a team over on the right! :) 👉\");\n    }\n\n    addCharacterToTeam(characterData, teamName) {\n        this.props.addCharacterToTeam(characterData, teamName);\n        this.setState({addCharacterModalOpen:false})\n    }\n}\n","import React, { Component } from 'react';\nimport { Tile } from './Tile';\n\nexport class ResultsList extends Component {\n  render() {\n    const resultCardElement = this.props.results.length>0 || !this.props.searchWord === ''\n      ? this.props.results.map((result) => {\n        return (\n          <Tile\n            data={result}\n            teams={this.props.teams}\n            key={ result.id }\n            image={ result.thumbnail.path + '.' + result.thumbnail.extension }\n            title={result.name}\n            addCharacterToTeam={this.props.addCharacterToTeam}\n            onClick={ () => this.props.onResultClick(result.id) }\n          />\n        );\n      })\n      : <h1>{this.props.searchWord ? 'No results found for \"' + this.props.searchWord + '\".  Let\\'s try again!'\n            : 'Search for a character above! 👆'}</h1>;\n\n    return (\n      <section className=\"results-list\">\n        { resultCardElement }\n      </section>\n    );\n  }\n}\n","import React, {Component} from 'react';\n\nexport class SearchBar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchWord: props.searchWord,\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    render() {\n        return (\n            <form className=\"search-form\" onSubmit={this.handleSubmit}>\n                    <div className=\"text search-label\">SEARCH</div>\n                    <input\n                        className=\"search-bar\"\n                        type=\"text\"\n                        value={this.state.searchWord}\n                        placeholder=\"Search for a character to add to your crew!\"\n                        onChange={this.handleChange}\n                        autoFocus={true}\n                    />\n            </form>\n        );\n    }\n\n    handleSubmit(event) {\n        // this is here so pressing enter does not reload the page\n        event.preventDefault();\n    }\n\n    handleChange(event) {\n        this.setState({ searchWord: event.target.value })\n        this.props.onSubmit(event.target.value);\n    }\n\n}\n","import React, { Component } from 'react';\nimport loading from '../imgs/marvel_loader.gif';\n\nexport class Loading extends Component {\n  render() {\n    return (\n      <div className=\"text\">\n        <h1>{ 'Searching for \"' + this.props.searchWord + '\".' }</h1>\n        <img src={loading} alt=\"loading...\"/>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {Button} from \"@mantine/core\";\n\n\nexport class LoadMore extends Component {\n  render() {\n    return (\n      <Button className=\"more-btn\" onClick={ this.props.onClick }>Load More</Button>\n    );\n  }\n}\n","import axios from 'axios';\n\nexport class MarvelAPI {\n\n  md5 = require('blueimp-md5');\n\n  constructor() {\n    this.privateKey = process.env.REACT_APP_PRIVATE_API_KEY\n    this.publicKey = process.env.REACT_APP_PUBLIC_API_KEY;\n    this.ts = new Date().getTime();\n    this.hash = this.md5(this.ts + this.privateKey + this.publicKey);\n  }\n\n  getAuthInfo() {\n    return {\n      apikey: this.publicKey,\n      hash: this.hash,\n      ts: this.ts\n    };\n  }\n\n  getCharacters(param = {}) {\n    const params = {...param, ...this.getAuthInfo()};\n\n    //grab the base url for the Marvel API from .env\n    const baseURL = process.env.REACT_APP_MARVEL_API_BASE_URL;\n\n    return axios.get(baseURL, { params: params })\n      .then((response) => {\n        return response.data.data;\n      });\n  }\n\n  getCharacter(id, config = {}) {\n    const params = { ...config, ...this.getAuthInfo() };\n\n    const endpoint = process.env.REACT_APP_MARVEL_API_BASE_URL + '/' + id;\n\n    return axios.get(endpoint, { params: params })\n      .then((response) => {\n        return response.data.data;\n      });\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport class Error extends Component {\n  render() {\n    return (\n      <div className=\"error\">\n        <h1>Whoops, something went wrong!</h1>\n      </div>\n    );\n  }\n}\n","import {Button, Modal, TextInput, Tooltip} from '@mantine/core';\nimport React, { Component }  from 'react';\n\nexport class CreateTeamModal extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modalOpen: false,\n            newTeamName: ''\n        };\n        // this.createTeam = this.createTeam.bind(this);\n    }\n\n    render() {\n\n        return (\n            <>\n                <Modal\n                    opened={this.state.modalOpen}\n                    onClose={() => this.setState({modalOpen: false})}\n                    title={this.props.title}\n                    closeOnClickOutside={false}\n                    withCloseButton={true}\n                    overlayBlur={4}\n                >\n                    <form onSubmit={this.handleSubmit}>\n                    <TextInput\n                        mt={'md'}\n                        placeholder={'Team Name'}\n                        onChange={(event) => this.setState({newTeamName: event.currentTarget.value})}\n                        data-autofocus\n                    />\n                    <Button className=\"create-team-btn\"\n                            onClick={() => {\n                                this.createTeam();\n                            }}\n                            type={\"submit\"}\n                    >\n                        Create\n                    </Button>\n                    </form>\n                </Modal>\n\n                <Tooltip label=\"Create A new Team\">\n                    <Button className=\"create-team-btn\"\n                            onClick={() => this.setState({modalOpen: true})}\n                    >\n                        Create a new team\n                    </Button>\n                </Tooltip>\n            </>\n        );\n\n    }\n\n    handleSubmit(event) {\n        // this is here so the page is not reloaded when the form is submitted\n        event.preventDefault();\n    }\n\n    createTeam() {\n        if (this.props.currentTeams.findIndex((team) => team.teamName === this.state.newTeamName) >= 0) {\n            alert(\"a team with the name '\" + this.state.newTeamName + \"' already exists!\");\n        } else if (this.state.newTeamName === '') {\n            alert(\"Name can not be empty! :)\")\n        } else {\n            this.props.onCreateClick(this.state.newTeamName);\n            this.setState({modalOpen: false});\n            this.setState({newTeamName: ''});\n        }\n    }\n}\n\n","import React, {Component} from \"react\";\nimport {Accordion, ActionIcon, Avatar, Box} from '@mantine/core';\nimport {IconTrash} from \"@tabler/icons\";\n\n\nexport class TeamAccordion extends Component {\n\n    render() {\n        const teamsAccordion = this.props.teams?\n            <Accordion chevronPosition=\"left\" sx={{maxWidth: 400}} mx=\"auto\">\n                {\n                    this.props.teams.map((result, index) => {\n                        return (\n                            <Accordion.Item\n                                className=\"accordion\" key={index.toString()} value={result.teamName + \"-item\"}>\n                                <Box sx={{display: 'flex', alignItems: 'center'}}>\n                                    <Accordion.Control>{result.teamName}</Accordion.Control>\n                                    <ActionIcon onClick={() => {\n                                        this.onDeleteTeamClicked(index);\n                                    }}\n                                                size=\"lg\">\n                                        <IconTrash size={16}/>\n                                    </ActionIcon>\n                                </Box>\n                                {\n                                    result.characters.length > 0 ?\n                                        result.characters.map((item, characterIndex) => (\n                                                <Accordion.Panel key={characterIndex}>{\n                                                    <div className=\"character-list-item\">\n                                                        <Avatar src={item.thumbnail.path + '.' + item.thumbnail.extension} alt=\"it's me\"/>\n                                                        <div>{item.name}</div>\n                                                        <ActionIcon onClick={() => {\n                                                            this.onDeleteCharacterClicked(item.id, index);\n                                                        }}\n                                                                    size=\"lg\">\n                                                            <IconTrash size={16}/>\n                                                        </ActionIcon>\n                                                    </div>\n                                                }</Accordion.Panel>\n                                            )\n                                        ) :\n                                        <Accordion.Panel> <span role=\"img\" aria-label=\"point-left\">👈</span> Search and select a character to add to this team! <span role=\"img\" aria-label=\"search\">🔎</span></Accordion.Panel>\n                                }\n                            </Accordion.Item>\n                        );\n                    })}\n            </Accordion>\n            : <div className=\"no-teams\">Create a team above! <span role=\"img\" aria-label=\"point-up\">👆</span> </div>;\n\n        return (\n            <>\n                {teamsAccordion}\n            </>\n        );\n    }\n\n    onDeleteTeamClicked(teamIndex) {\n        this.props.onDeleteTeamClicked(teamIndex);\n    }\n\n    onDeleteCharacterClicked(characterId, teamIndex) {\n        this.props.onDeleteCharacterClicked(characterId, teamIndex);\n    }\n\n}\n\n\n","import React, {Component} from 'react';\nimport './App.css';\nimport {ResultsList} from './components/ResultsList';\nimport {SearchBar} from './components/SearchBar';\nimport {Loading} from './components/Loading';\nimport {LoadMore} from './components/LoadMore';\nimport {MarvelAPI} from './services/MarvelAPI';\nimport {Error} from \"./components/Error\";\nimport {CreateTeamModal} from './components/CreateTeamModal';\nimport {TeamAccordion} from \"./components/TeamAccordion\";\nimport _ from \"lodash\";\n\n\nfunction getTeams() {\n    // getting saved teams\n    const saved = localStorage.getItem(\"teams\");\n    const initial = JSON.parse(saved);\n    return initial || [];\n}\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchWord: '',\n            results: [],\n            canLoadMore: false,\n            selectedResult: null,\n            teams: getTeams()\n        };\n\n        this.marvelService = new MarvelAPI();\n\n        this.addNewTeam = this.addNewTeam.bind(this);\n        this.removeTeam = this.removeTeam.bind(this);\n        this.addCharacterToTeam = this.addCharacterToTeam.bind(this);\n        this.removeCharacterFromTeam = this.removeCharacterFromTeam.bind(this);\n        this.getCharacters = this.getCharacters.bind(this);\n\n\n    }\n\n\n    render() {\n        const searchResults = this.state.hasError ?\n            <Error/>\n            : this.state.isLoading ?\n                <Loading searchWord={this.state.searchWord}/> :\n                (\n                    <ResultsList\n                        results={this.state.results}\n                        teams={this.state.teams}\n                        searchWord={this.state.searchWord}\n                        onResultClick={this.getCharacter}\n                        addCharacterToTeam={this.addCharacterToTeam}\n                    />\n                );\n\n        const loadMoreBtn = this.state.canLoadMore ?\n            <LoadMore onClick={this.getMoreCharacters}/> :\n            '';\n\n\n        const teamsAccordion =\n            <TeamAccordion\n                teams={this.state.teams}\n                onDeleteTeamClicked={this.removeTeam}\n                onDeleteCharacterClicked={this.removeCharacterFromTeam}\n            />\n\n        return (\n            <section className=\"app\">\n                <h2 className=\"text title\">MARVEL CREW BUILDER</h2>\n                <SearchBar className=\"search-bar\"\n                           searchWord={this.state.searchWord}\n                           onSubmit={(searchWord) => this.setState({searchWord})}\n                />\n                <div className=\"content\">\n                    <div className=\"left\">\n                        <div className=\"search-result-grid\">\n                            {searchResults}\n                            {loadMoreBtn}\n                        </div>\n                    </div>\n                    <div className=\"right\">\n                        <div className=\"created-teams-list\">\n                            <div className=\"text team-title\">YOUR TEAMS</div>\n                            <CreateTeamModal className=\"create-btn\" title=\"Choose a team name\"\n                                             onCreateClick={this.addNewTeam}\n                                             currentTeams={this.state.teams}\n                            />\n                            <div className=\"current-teams-list\">\n                                {teamsAccordion}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const searchWord = this.state.searchWord;\n        const prevSearchWord = prevState.searchWord;\n\n        if (this.state.results.length > 0 && searchWord === '') {\n            this.setState({\n                results: [],\n                canLoadMore: false\n            })\n        } if (searchWord && (searchWord !== prevSearchWord)) {\n            this.setState({isLoading: true});\n            this.debouncedSearch();\n        }\n    }\n\n\n\n    debouncedSearch = _.debounce(function () {\n        this.getCharacters();\n    }, 500);\n\n    getCharacters = () => {\n\n        this.marvelService.getCharacters({\n            nameStartsWith: this.state.searchWord,\n        })\n            .then((data) => {\n                this.setState({\n                    results: data.results,\n                    canLoadMore: data.total > data.offset + data.count,\n                    isLoading: false,\n                });\n            })\n            .catch((err) => {\n                console.error(err);\n                this.setState({hasError: true});\n            });\n    }\n\n    getCharacter = (id) => {\n\n        this.marvelService.getCharacter(id)\n            .then((data) => {\n                this.setState({selectedResult: data.results[0]});\n            })\n            .catch((err) => {\n                console.error(err);\n                this.setState({hasError: true});\n            });\n\n    }\n\n    getMoreCharacters = () => {\n        this.marvelService.getCharacters({\n            nameStartsWith: this.state.searchWord,\n            offset: this.state.results.length,\n        })\n            .then((data) => {\n                this.setState({\n                    results: [...this.state.results, ...data.results],\n                    canLoadMore: data.total > data.offset + data.count,\n                });\n            })\n            .catch((err) => {\n                console.error(err);\n                this.setState({hasError: true});\n            });\n    }\n\n    addNewTeam(teamName) {\n        console.log(\"adding team \" + teamName);\n        let newTeam =\n            {\n                teamName: teamName,\n                characters: [],\n            };\n\n        this.setState({teams: [...this.state.teams, newTeam]});\n        localStorage.setItem(\"teams\", JSON.stringify([...this.state.teams, newTeam]));\n    }\n\n    removeTeam(index) {\n        console.log(\"removing team \" + this.state.teams[index].teamName)\n\n        const clonedTeams = [...this.state.teams];\n\n        clonedTeams.splice(index, 1);\n\n        this.setState({\n            teams: [...clonedTeams]\n        });\n\n        localStorage.setItem(\"teams\", JSON.stringify([...clonedTeams]));\n    }\n\n    removeCharacterFromTeam(characterId, teamIndex) {\n        console.log(\"removing character \" + characterId + \" from team \" + this.state.teams[teamIndex].teamName);\n\n        const team = this.state.teams[teamIndex];\n        const characterIndex = team.characters.findIndex((char) => char.id === characterId);\n\n        team.characters.splice(characterIndex, 1)\n\n        this.setState({\n            ...this.state.teams[teamIndex],\n            characters: [...team.characters]\n        });\n        localStorage.setItem(\"teams\", JSON.stringify(this.state.teams));\n    }\n\n    addCharacterToTeam(newCharacterName, teamName) {\n        console.log(\"adding \" + newCharacterName.name + \" to team \" + teamName);\n\n        const index = this.state.teams.findIndex((team) => team.teamName === teamName);\n\n        let updatedTeams = [...this.state.teams];\n        updatedTeams[index].characters.push(newCharacterName)\n\n\n        this.setState({\n            teams: [...updatedTeams]\n        });\n        localStorage.setItem(\"teams\", JSON.stringify([...updatedTeams]));\n    }\n}\n\nexport default App;\n","import { createRoot } from 'react-dom/client';\n\nimport React from 'react';\n\nimport App from \"./App\";\nimport './index.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(<App/>);","module.exports = __webpack_public_path__ + \"static/media/marvel_loader.e65ca722.gif\";"],"sourceRoot":""}